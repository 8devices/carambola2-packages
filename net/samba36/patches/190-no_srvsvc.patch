--- a/source3/smbd/server_exit.c
+++ b/source3/smbd/server_exit.c
@@ -154,7 +154,9 @@ static void exit_server_common(enum serv
 		rpc_spoolss_shutdown();
 #endif
 
+#ifdef SRVSVC_SUPPORT
 		rpc_srvsvc_shutdown();
+#endif
 #ifdef WINREG_SUPPORT
 		rpc_winreg_shutdown();
 #endif
--- a/source3/librpc/rpc/rpc_common.c
+++ b/source3/librpc/rpc/rpc_common.c
@@ -108,9 +108,11 @@ static bool initialize_interfaces(void)
 		return false;
 	}
 #endif
+#ifdef SRVSVC_SUPPORT
 	if (!smb_register_ndr_interface(&ndr_table_srvsvc)) {
 		return false;
 	}
+#endif
 #ifdef WKSSVC_SUPPORT
 	if (!smb_register_ndr_interface(&ndr_table_wkssvc)) {
 		return false;
--- a/source3/rpc_server/rpc_ep_setup.c
+++ b/source3/rpc_server/rpc_ep_setup.c
@@ -459,6 +459,7 @@ static bool winreg_init_cb(void *ptr)
 }
 #endif
 
+#ifdef SRVSVC_SUPPORT
 static bool srvsvc_init_cb(void *ptr)
 {
 	struct dcesrv_ep_context *ep_ctx =
@@ -507,6 +508,7 @@ static bool srvsvc_init_cb(void *ptr)
 
 	return true;
 }
+#endif
 
 static bool lsarpc_init_cb(void *ptr)
 {
@@ -1098,13 +1100,14 @@ bool dcesrv_ep_setup(struct tevent_conte
 	}
 #endif
 
+#ifdef SRVSVC_SUPPORT
 	srvsvc_cb.init         = srvsvc_init_cb;
 	srvsvc_cb.shutdown     = NULL;
 	srvsvc_cb.private_data = ep_ctx;
 	if (!NT_STATUS_IS_OK(rpc_srvsvc_init(&srvsvc_cb))) {
 		return false;
 	}
-
+#endif
 
 	lsarpc_cb.init         = lsarpc_init_cb;
 	lsarpc_cb.shutdown     = NULL;
--- a/source3/rpcclient/rpcclient.c
+++ b/source3/rpcclient/rpcclient.c
@@ -630,7 +630,9 @@ static struct cmd_set *rpcclient_command
 #ifdef NETLOGON_SUPPORT
 	netlogon_commands,
 #endif
+#ifdef SRVSVC_SUPPORT
 	srvsvc_commands,
+#endif
 #ifdef DFS_SUPPORT
 	dfs_commands,
 #endif
--- a/source3/smbd/lanman.c
+++ b/source3/smbd/lanman.c
@@ -2197,6 +2197,10 @@ static bool api_RNetShareAdd(struct smbd
 	struct srvsvc_NetShareInfo2 info2;
 	struct dcerpc_binding_handle *b;
 
+#ifndef SRVSVC_SUPPORT
+	return False;
+#endif
+
 	if (!str1 || !str2 || !p) {
 		return False;
 	}
@@ -3818,10 +3822,7 @@ static bool api_RNetServerGetInfo(struct
 	NTSTATUS status;
 	WERROR werr;
 	TALLOC_CTX *mem_ctx = talloc_tos();
-	struct rpc_pipe_client *cli = NULL;
-	union srvsvc_NetSrvInfo info;
 	int errcode;
-	struct dcerpc_binding_handle *b;
 
 	if (!str1 || !str2 || !p) {
 		return False;
@@ -3884,66 +3885,16 @@ static bool api_RNetServerGetInfo(struct
 	p = *rdata;
 	p2 = p + struct_len;
 
-	status = rpc_pipe_open_interface(mem_ctx, &ndr_table_srvsvc.syntax_id,
-					conn->session_info,
-					&conn->sconn->client_id,
-					conn->sconn->msg_ctx,
-					&cli);
-	if (!NT_STATUS_IS_OK(status)) {
-		DEBUG(0,("api_RNetServerGetInfo: could not connect to srvsvc: %s\n",
-			  nt_errstr(status)));
-		errcode = W_ERROR_V(ntstatus_to_werror(status));
-		goto out;
-	}
-
-	b = cli->binding_handle;
-
-	status = dcerpc_srvsvc_NetSrvGetInfo(b, mem_ctx,
-					     NULL,
-					     101,
-					     &info,
-					     &werr);
-	if (!NT_STATUS_IS_OK(status)) {
-		errcode = W_ERROR_V(ntstatus_to_werror(status));
-		goto out;
-	}
-	if (!W_ERROR_IS_OK(werr)) {
-		errcode = W_ERROR_V(werr);
-		goto out;
-	}
-
-	if (info.info101 == NULL) {
-		errcode = W_ERROR_V(WERR_INVALID_PARAM);
-		goto out;
-	}
-
 	if (uLevel != 20) {
-		srvstr_push(NULL, 0, p, info.info101->server_name, 16,
+		srvstr_push(NULL, 0, p, global_myname(), 16,
 			STR_ASCII|STR_UPPER|STR_TERMINATE);
-  	}
+	}
 	p += 16;
 	if (uLevel > 0) {
-		SCVAL(p,0,info.info101->version_major);
-		SCVAL(p,1,info.info101->version_minor);
-		SIVAL(p,2,info.info101->server_type);
-
-		if (mdrcnt == struct_len) {
-			SIVAL(p,6,0);
-		} else {
-			SIVAL(p,6,PTR_DIFF(p2,*rdata));
-			if (mdrcnt - struct_len <= 0) {
-				return false;
-			}
-			push_ascii(p2,
-				info.info101->comment,
-				MIN(mdrcnt - struct_len,
-					MAX_SERVER_STRING_LENGTH),
-				STR_TERMINATE);
-			p2 = skip_string(*rdata,*rdata_len,p2);
-			if (!p2) {
-				return False;
-			}
-		}
+		SCVAL(p,0,lp_major_announce_version());
+		SCVAL(p,1,lp_minor_announce_version());
+		SIVAL(p,2,lp_default_server_announce());
+		SIVAL(p,6,0);
 	}
 
 	if (uLevel > 1) {
@@ -5630,6 +5581,10 @@ static bool api_RNetSessionEnum(struct s
 	uint32_t totalentries, resume_handle = 0;
 	uint32_t count = 0;
 
+#ifndef SRVSVC_SUPPORT
+	return False;
+#endif
+
 	if (!str1 || !str2 || !p) {
 		return False;
 	}

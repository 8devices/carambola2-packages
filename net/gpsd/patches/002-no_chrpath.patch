--- a/SConstruct
+++ b/SConstruct
@@ -270,8 +270,6 @@ def installdir(dir, add_destdir=True):
 
 # Honor the specified installation prefix in link paths.
 env.Prepend(LIBPATH=[installdir('libdir')])
-if env["shared"]:
-    env.Prepend(RPATH=[installdir('libdir')])
 
 # Give deheader a way to set compiler flags
 if 'MORECFLAGS' in os.environ:
@@ -390,17 +388,6 @@ config = Configure(env, custom_tests = {
                                          'CheckXsltproc' : CheckXsltproc})
 
 env.Prepend(LIBPATH=[os.path.realpath(os.curdir)])
-if config.CheckExecutable('$CHRPATH -v', 'chrpath'):
-    # Tell generated binaries to look in the current directory for
-    # shared libraries so we can run tests without hassle. Should be
-    # handled sanely by scons on all systems.  Not good to use '.' or
-    # a relative path here; it's a security risk.  At install time we
-    # use chrpath to edit this out of RPATH.
-    if env["shared"]:
-        env.Prepend(RPATH=[os.path.realpath(os.curdir)])
-else:
-    print "chrpath is not available, forcing static linking."
-    env["shared"] = False
 
 confdefs = ["/* gpsd_config.h.  Generated by scons, do not hand-hack.  */\n"]
 
@@ -1147,11 +1134,6 @@ binaryinstall.append(LibraryInstall(env,
 if qt_env:
     binaryinstall.append(LibraryInstall(qt_env, installdir('libdir'), compiled_qgpsmmlib))
 
-# We don't use installdir here in order to avoid having DESTDIR affect the rpath
-if env["shared"]:
-    env.AddPostAction(binaryinstall, '$CHRPATH -r "%s" "$TARGET"' \
-                      % (installdir('libdir', False), ))
-
 if not env['debug'] and not env['profiling'] and env['strip']:
     env.AddPostAction(binaryinstall, '$STRIP $TARGET')
 

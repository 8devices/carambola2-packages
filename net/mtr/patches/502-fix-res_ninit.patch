--- a/dns.c
+++ b/dns.c
@@ -309,17 +309,17 @@ char nullstring[] = "";
 
 int use_dns = 1;
 
-#ifdef res_ninit
-#define MY_RES_INIT() res_ninit(&myres);
-#define RES_MKQUERY(a, b, c, d, e, f, g, h, i) \
-    res_nmkquery(&myres, a, b, c, d, e, f, g, h, i)
-struct __res_state myres;
-#else
+//#ifdef res_ninit
+//#define MY_RES_INIT() res_ninit(&myres);
+//#define RES_MKQUERY(a, b, c, d, e, f, g, h, i) \
+//    res_nmkquery(&myres, a, b, c, d, e, f, g, h, i)
+//struct __res_state myres;
+//#else
 #define MY_RES_INIT() res_init();
 #define RES_MKQUERY(a, b, c, d, e, f, g, h, i) \
     res_mkquery(a, b, c, d, e, f, g, h, i)
 #define myres _res
-#endif
+//#endif
 
 /* Code */
 #ifdef CorruptCheck
@@ -1274,7 +1274,7 @@ res_nmkquery(res_state statp,
 #if 0
         hp->id = htons(++statp->id);
 #else
-        hp->id = htons(statp->id);
+//        hp->id = htons(statp->id);
         int randombits;
         do
           {
@@ -1287,7 +1287,7 @@ res_nmkquery(res_state statp,
 #endif
           }
         while ((randombits & 0xffff) == 0);
-        statp->id = (statp->id + randombits) & 0xffff;
+//        statp->id = (statp->id + randombits) & 0xffff;
 #endif
         hp->opcode = op;
         hp->rd = (statp->options & RES_RECURSE) != 0;

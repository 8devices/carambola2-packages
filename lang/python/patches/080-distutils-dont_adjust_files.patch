diff -ruN Python-2.5.4.orig/Lib/distutils/command/build_scripts.py Python-2.5.4/Lib/distutils/command/build_scripts.py
--- Python-2.5.4.orig/Lib/distutils/command/build_scripts.py	2009-01-11 06:17:43.000000000 +0100
+++ Python-2.5.4/Lib/distutils/command/build_scripts.py	2009-01-11 15:01:54.000000000 +0100
@@ -54,15 +54,10 @@
 
 
     def copy_scripts (self):
-        """Copy each script listed in 'self.scripts'; if it's marked as a
-        Python script in the Unix way (first line matches 'first_line_re',
-        ie. starts with "\#!" and contains "python"), then adjust the first
-        line to refer to the current Python interpreter as we copy.
-        """
+        """Copy each script listed in 'self.scripts'"""
         self.mkpath(self.build_dir)
         outfiles = []
         for script in self.scripts:
-            adjust = 0
             script = convert_path(script)
             outfile = os.path.join(self.build_dir, os.path.basename(script))
             outfiles.append(outfile)
@@ -86,34 +81,12 @@
                     self.warn("%s is an empty file (skipping)" % script)
                     continue
 
-                match = first_line_re.match(first_line)
-                if match:
-                    adjust = 1
-                    post_interp = match.group(1) or ''
-
-            if adjust:
-                log.info("copying and adjusting %s -> %s", script,
-                         self.build_dir)
-                if not self.dry_run:
-                    outf = open(outfile, "w")
-                    if not sysconfig.python_build:
-                        outf.write("#!%s%s\n" %
-                                   (self.executable,
-                                    post_interp))
-                    else:
-                        outf.write("#!%s%s\n" %
-                                   (os.path.join(
-                            sysconfig.get_config_var("BINDIR"),
-                            "python" + sysconfig.get_config_var("EXE")),
-                                    post_interp))
-                    outf.writelines(f.readlines())
-                    outf.close()
-                if f:
-                    f.close()
-            else:
-                if f:
-                    f.close()
-                self.copy_file(script, outfile)
+            if f:
+                f.close()
+
+            log.info("copying %s -> %s", script,
+                     self.build_dir)
+            self.copy_file(script, outfile)
 
         if os.name == 'posix':
             for file in outfiles:
